<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="shortcut icon" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/images/favicon.ico">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/vendor/flag-icon-css/flag-icon.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/fonts/web-icons/web-icons.min.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/fonts/brand-icons/brand-icons.min.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/vendor/toastr/toastr.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/css/abiesoft.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/css/owl.carousel.min.css">
    <link rel="stylesheet" href="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/css/owl.theme.default.min.css">
    {block plugincss}{/block}
    <link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        clifford: '#da373d',
                    }
                }
            }
        }
        const BASEURL = {\AbieSoft\Utilities\Config::envReader('BASEURL')};
        const APIKEY = {\AbieSoft\Utilities\Config::envReader('APIKEY')};
    </script>
    {var $header = false}
</head>
<title>{block title}{/block}</title>
<body class="{block body}{/block}">
    {include 'theme/components/header.php.latte'}
    <div class="g-signin2" data-onsuccess="onSignIn" data-theme="dark"></div>
    {block content}{/block}
    {block dialog}{/block}
    {include 'theme/components/footer.php.latte'}

    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/js/jquery-3.6.0.min.js"></script>
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/js/owl.carousel.min.js"></script>
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/vendor/bootstrap-sweetalert/sweetalert.js"></script>
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/vendor/toastr/toastr.js"></script>
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/js/page/toastr.js"></script>
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/js/validasi.js"></script>
    {block pluginjs}{/block}
    {*
        Blok untuk include javascript per page
    *}
    {block pagejs}{/block}
    <script src="{\AbieSoft\Utilities\Config::envReader('BASEURL')}/assets/jsa/index.js"></script>
    <script>
        var GoogleAuth;
        var SCOPE = 'https://www.googleapis.com/auth/drive.metadata.readonly';
        function handleClientLoad() {
            // Load the API's client and auth2 modules.
            // Call the initClient function after the modules load.
            gapi.load('client:auth2', initClient);
        }

        function initClient() {
            // In practice, your app can retrieve one or more discovery documents.
            var discoveryUrl = 'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest';

            // Initialize the gapi.client object, which app uses to make API requests.
            // Get API key and client ID from API Console.
            // 'scope' field specifies space-delimited list of access scopes.
            gapi.client.init({
                'apiKey': 'YOUR_API_KEY',
                'clientId': 'YOUR_CLIENT_ID',
                'discoveryDocs': [discoveryUrl],
                'scope': SCOPE
            }).then(function () {
            GoogleAuth = gapi.auth2.getAuthInstance();

            // Listen for sign-in state changes.
            GoogleAuth.isSignedIn.listen(updateSigninStatus);

            // Handle initial sign-in state. (Determine if user is already signed in.)
            var user = GoogleAuth.currentUser.get();
            setSigninStatus();

            // Call handleAuthClick function when user clicks on
            //      "Sign In/Authorize" button.
            $('#sign-in-or-out-button').click(function() {
                handleAuthClick();
            });
            $('#revoke-access-button').click(function() {
                revokeAccess();
            });
            });
        }

        function handleAuthClick() {
            if (GoogleAuth.isSignedIn.get()) {
            // User is authorized and has clicked "Sign out" button.
            GoogleAuth.signOut();
            } else {
            // User is not signed in. Start Google auth flow.
            GoogleAuth.signIn();
            }
        }

        function revokeAccess() {
            GoogleAuth.disconnect();
        }

        function setSigninStatus() {
            var user = GoogleAuth.currentUser.get();
            var isAuthorized = user.hasGrantedScopes(SCOPE);
            if (isAuthorized) {
            $('#sign-in-or-out-button').html('Sign out');
            $('#revoke-access-button').css('display', 'inline-block');
            $('#auth-status').html('You are currently signed in and have granted ' +
                'access to this app.');
            } else {
            $('#sign-in-or-out-button').html('Sign In/Authorize');
            $('#revoke-access-button').css('display', 'none');
            $('#auth-status').html('You have not authorized this app or you are ' +
                'signed out.');
            }
        }

        function updateSigninStatus() {
            setSigninStatus();
        }
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};handleClientLoad()"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
</body>
</html>